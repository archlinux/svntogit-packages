# Maintainer: Levente Polyak <anthraxx[at]archlinux[dot]org>
# Maintainer: David Runge <dvzrv@archlinux.org>
# Contributor: Anatol Pomozov <anatol dot pomozov at gmail>
# Contributor: St√©phane Gaudreault <stephane@archlinux.org>

pkgname=openmpi
pkgver=4.1.5
pkgrel=1
pkgdesc='High performance message passing library (MPI)'
arch=(x86_64)
url='https://www.open-mpi.org'
license=('custom:OpenMPI')
depends=(gcc-libs glibc hwloc libevent libnl openpmix openssh zlib)
makedepends=(cuda gcc-fortran inetutils valgrind)
optdepends=(
  'cuda: cuda support'
  'gcc-fortran: fortran support'
  'perl: for aggregate_profile.pl and profile2mat.pl'
)
provides=(
  libmca_common_cuda.so
  libmca_common_monitoring.so
  libmca_common_ompio.so
  libmca_common_sm.so
  libmpi.so
  libmpi_cxx.so
  libmpi_mpifh.so
  libmpi_usempi_ignore_tkr.so
  libmpi_usempif08.so
  libompitrace.so
  libopen-pal.so
  libopen-rte.so
)
source=(https://www.open-mpi.org/software/ompi/v${pkgver%.*}/downloads/$pkgname-$pkgver.tar.bz2)
sha256sums=('a640986bc257389dd379886fdae6264c8cfa56bc98b71ce3ae3dfbd8ce61dbe3')
b2sums=('135a8373ed6173b7a94def18e3b964c6b6050c909382e0dbb1898a6d261ae428931358121ef6d325d303f4f510017a94970f7c66b280a5fc460365821f36dece')

build() {
  local configure_options=(
    --prefix=/usr
    --enable-builtin-atomics
    --enable-memchecker
    --enable-mpi-cxx
    --enable-mpi-fortran=all
    --enable-pretty-print-stacktrace
    --libdir=/usr/lib
    --sysconfdir=/etc/$pkgname
    --with-cuda=/opt/cuda
    --with-hwloc=external
    --with-libevent=external
    --with-pmix=external
    --with-valgrind
  )
  cd $pkgname-$pkgver

  # TODO: depend on prrte with openmpi >= 5
  ./configure "${configure_options[@]}"
  # prevent excessive overlinking due to libtool
  sed -i -e 's/ -shared / -Wl,-O1,--as-needed\0/g' libtool
  make V=1
}

check() {
  make check -C $pkgname-$pkgver
}

package() {
  depends+=(libpmix.so)

  make DESTDIR="$pkgdir" install -C $pkgname-$pkgver
  install -Dm 644 $pkgname-$pkgver/LICENSE -t "$pkgdir/usr/share/licenses/$pkgname/"
}

# vim: ts=2 sw=2 et:
